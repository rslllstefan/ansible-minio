---
- name: Compose the MinIO server download base url
  set_fact:
    _minio_server_download_base_url: "https://dl.minio.io/server/minio/release/linux-{{ go_arch }}"

- name: Compose the MinIO server download url with lastest release
  set_fact:
    _minio_server_download_url: "{{ _minio_server_download_base_url }}/minio"
  when: minio_server_release | length == 0

- name: "Compose the MinIO server download url with release {{ minio_server_release }}"
  set_fact:
    _minio_server_download_url: "{{ _minio_server_download_base_url }}/archive/minio.{{ minio_server_release }}"
  when: minio_server_release | length > 0

- name: "Append the MinIO console addr to minio_server_opts variable"
  set_fact:
    minio_server_opts: "--console-address {{ minio_console_addr }} {{ minio_server_opts }}"
  when: minio_console_addr | length > 1

- name: "Append the MinIO config directory var to minio_server_opts"
  set_fact:
    minio_server_opts: "--config-dir {{ minio_config_dir }} {{ minio_server_opts }}"
  when: minio_config_dir | length > 0

- name: Create MinIO group
  group:
    name: "{{ minio_group }}"
    state: present

- name: Create MinIO user
  user:
    name: "{{ minio_user }}"
    group: "{{ minio_group }}"
    system: "yes"
    shell: "/usr/sbin/nologin"

- name: Create the MinIO data storage directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0755
  when: minio_server_make_datadirs
  with_items: "{{ minio_server_datadirs }}"

- name: Download the MinIO server
  get_url:
    url: "{{ _minio_server_download_url }}"
    dest: "{{ minio_server_bin }}"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0755
    checksum: "sha256:{{ _minio_server_download_url }}.sha256sum"
  register: _download_server
  until: _download_server is succeeded
  retries: 5
  delay: 2
  notify: restart minio

- name: Generate the MinIO server envfile
  template:
    src: minio.env.j2
    dest: "{{ minio_server_envfile }}"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0640
  notify: restart minio

- name: Create the MinIO server systemd config
  template:
    src: minio.service.j2
    dest: "/etc/systemd/system/minio.service"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0644
  when: ansible_service_mgr == "systemd"
  notify:
    - reload minio systemd
    - restart minio

- name: Create the MinIO server init.d config
  template:
    src: minio.init.j2
    dest: "/etc/init.d/minio"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0750
  when: ansible_service_mgr != "systemd"
  notify: restart minio

- name: Create the MinIO config dir
  file:
    path: "{{ minio_config_dir }}"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    state: directory
    mode: 0755
  when: minio_config_dir is defined

- name: Enable and start the MinIO service
  service:
    name: minio
    enabled: true
    state: started
  notify: Check MinIO WebUI
